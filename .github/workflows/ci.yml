name: Run CI checks # The name will show up on the GitHub Actions dashboard

on: [pull_request] # This workflow will run only on Pull Requests

jobs:
  lint: # give our job an ID
    runs-on: ubuntu-latest # the image our job will run on
    name: Lint # the name that will appear on the Actions UI
    steps: # what steps it will perform
      - uses: actions/checkout@v1 # checkout whatever branch the PR is using
      - uses: bahmutov/npm-install@v1 # trigger an `npm install`
      - run: npm run nx affected --target=lint --base=origin/main --parallel # test the "store" project
  build: # give our job an ID
    runs-on: ubuntu-latest # the image our job will run on
    name: Build # the name that will appear on the Actions UI
    steps: # what steps it will perform
      - uses: actions/checkout@v1 # checkout whatever branch the PR is using
      - uses: bahmutov/npm-install@v1 # trigger an `npm install`
      - run: npm run nx affected --target=build --base=origin/main --parallel # test the "store" project
  test: # give our job an ID
    runs-on: ubuntu-latest # the image our job will run on
    name: Test # the name that will appear on the Actions UI
    steps: # what steps it will perform
      - uses: actions/checkout@v1 # checkout whatever branch the PR is using
      - uses: bahmutov/npm-install@v1 # trigger an `npm install`
      - run: npm run nx affected --target=test --base=origin/main --parallel # test the "store" project
  e2e: # give our job an ID
    runs-on: ubuntu-latest # the image our job will run on
    name: E2E # the name that will appear on the Actions UI
    steps: # what steps it will perform
      - uses: actions/checkout@v1 # checkout whatever branch the PR is using
      - uses: bahmutov/npm-install@v1 # trigger an `npm install`
      - run: npm run nx affected --target=e2e --base=origin/main --parallel # test the "store" project
